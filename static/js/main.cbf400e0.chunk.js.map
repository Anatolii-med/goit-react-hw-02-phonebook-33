{"version":3,"sources":["Components/ContactList/ContactItem.styled.js","Components/ContactList/ContactItem.jsx","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.jsx","Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.styled.js","Components/Filter/Filter.jsx","App.js","index.js"],"names":["ContactListItem","styled","li","ButtonDelete","button","Name","span","Tel","ContactItem","this","props","name","number","type","onClick","onDeleteNumber","Component","ContactListWrap","ol","ContactList","contacts","map","contact","onDeleteContact","id","FormWrap","div","LabelName","label","LabelTel","ButtonAddcontact","ContactForm","state","inputNameId","shortid","generate","inputTelId","findCurrentValue","e","target","value","setState","addContact","preventDefault","filterContact","find","toLowerCase","alert","onAdd","onSubmit","htmlFor","onChange","pattern","title","required","LabelFind","Filter","inputFilterId","onFilter","filter","App","addNewContact","newContactName","prevState","findFilterValue","removeContact","pers","normalizeFilter","filterCurrentTel","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbf400e0.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListItem = styled.li`\r\n  display: flex;\r\n\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n  background-color: #e6e2da;\r\n  padding: 5px;\r\n`;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  border: none;\r\n  background-color: burlywood;\r\n  height: 20px;\r\n`;\r\n\r\nexport const Name = styled.span`\r\n  color: #5b5a6b;\r\n`;\r\n\r\nexport const Tel = styled.span`\r\n  color: #5b5a6b;\r\n`;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactListItem, ButtonDelete, Name, Tel } from \"./ContactItem.styled\";\r\n\r\nclass ContactItem extends Component {\r\n  render() {\r\n    return (\r\n      <ContactListItem>\r\n        <Name>{`${this.props.name}:`}</Name>\r\n        <Tel>{this.props.number}</Tel>\r\n        <ButtonDelete\r\n          type=\"submit\"\r\n          onClick={() => this.props.onDeleteNumber(this.props.name)}\r\n        >\r\n          Delete\r\n        </ButtonDelete>\r\n      </ContactListItem>\r\n    );\r\n  }\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteNumber: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListWrap = styled.ol`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  width: 40%;\r\n  padding: 0 10px 10px 10px;\r\n`;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport { ContactListWrap } from \"./ContactList.styled\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <ContactListWrap>\r\n        {this.props.contacts.map((contact) => {\r\n          return (\r\n            <Fragment key={contact.id}>\r\n              <ContactItem\r\n                name={contact.name}\r\n                number={contact.number}\r\n                onDeleteNumber={this.props.onDeleteContact}\r\n              />\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </ContactListWrap>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FormWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 20%;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const LabelName = styled.label`\r\n  margin-bottom: 10px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n`;\r\n\r\nexport const LabelTel = styled.label`\r\n  margin-bottom: 10px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n`;\r\n\r\nexport const ButtonAddcontact = styled.button`\r\n  border: none;\r\n  background-color: burlywood;\r\n  height: 20px;\r\n`;\r\n","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormWrap,\r\n  LabelName,\r\n  LabelTel,\r\n  ButtonAddcontact,\r\n} from \"./ContactForm.styled\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  inputNameId = shortid.generate();\r\n  inputTelId = shortid.generate();\r\n\r\n  findCurrentValue = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  addContact = (e) => {\r\n    e.preventDefault();\r\n    this.props.filterContact.find(\r\n      (contact) => contact.name.toLowerCase() === this.state.name.toLowerCase()\r\n    )\r\n      ? alert(`${this.state.name} is already in contacts`)\r\n      : this.props.onAdd(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.addContact}>\r\n        <FormWrap>\r\n          <LabelName htmlFor={this.inputNameId}>\r\n            Name\r\n            <input\r\n              onChange={this.findCurrentValue}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={this.inputNameId}\r\n            />\r\n          </LabelName>\r\n          <LabelTel htmlFor={this.inputTelId}>\r\n            Number\r\n            <input\r\n              onChange={this.findCurrentValue}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.inputTelId}\r\n            />\r\n          </LabelTel>\r\n          <ButtonAddcontact type=\"submit\">Add contact</ButtonAddcontact>\r\n        </FormWrap>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  filterContact: PropTypes.array,\r\n  onAdd: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LabelFind = styled.label`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 30%;\r\n`;\r\n","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LabelFind } from \"./Filter.styled\";\r\n\r\nclass Filter extends Component {\r\n  inputFilterId = shortid.generate();\r\n\r\n  render() {\r\n    return (\r\n      <LabelFind htmlFor={this.inputFilterId}>\r\n        Find contacts by name\r\n        <input\r\n          onChange={this.props.onFilter}\r\n          type=\"text\"\r\n          value={this.props.filter}\r\n          id={this.inputFilterId}\r\n        />\r\n      </LabelFind>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport Filter from \"./Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (newContactName) => {\n    const contact = {\n      id: shortid.generate(),\n      name: newContactName.name,\n      number: newContactName.number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  findFilterValue = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  removeContact = (name) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((pers) => pers.name !== name),\n    }));\n  };\n\n  render() {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    const filterCurrentTel = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          filterContact={filterCurrentTel}\n          onAdd={this.addNewContact}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onFilter={this.findFilterValue} />\n        <ContactList\n          contacts={filterCurrentTel}\n          onDeleteContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}